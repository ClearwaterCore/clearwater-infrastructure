#!/bin/sh

# @file clearwater_diags_monitor
#
# Project Clearwater - IMS in the Cloud
# Copyright (C) 2013  Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

LOG_FILE=/var/log/clearwater-diags-monitor.log

DIAGS_DIR=/var/clearwater-diags-monitor
CRASH_DIR=$DIAGS_DIR/tmp
DUMPS_DIR=$DIAGS_DIR/dumps

COMPONENTS="bono sprout homestead homer ellis"

log()
{
  printf "[$(date +"%d-%h-%Y %H:%M:%S")] $@\n"
}

# Wait until a specified file is closed.
# Params:
#  $1 - The file to wait for.
wait_until_closed()
{
  file=$1

  while lsof $file >/dev/null 2>&1
  do
    sleep 1
  done
}

# Copy an entire directory to the dump preserving the full path (so for example
# the directory /var/log/sprout is copied to <dumpdir>/var/log/sprout).
#
# Params:
#   $1 - The directory to copy.
copy_dir_to_dump()
{
  src=$(realpath $1)
  cp -rp --parents $src $CURRENT_DUMP_DIR
}

# Copy the logs for all clearwater components to the dump file.
copy_component_logs_to_dump()
{
  for comp in $COMPONENTS
  do
    log_dir=/var/log/$comp
    if [ -d "$log_dir" ]
    then
      log "Copying logs for $comp"
      copy_dir_to_dump $log_dir
    fi
  done
}

#
# Script starts here.
#

cd $CRASH_DIR

while true
do

  # If the crash directory is empty wait for a new file to be created.
  if [ ! "$(ls -A)" ]
  then
    inotifywait -e create -qq .
  fi

  triggers=$(ls -A)
  log "Processing trigger files: $(echo $triggers)"

  # Create a new dump directory.
  CURRENT_DUMP=dump.$(date "+%Y%m%d-%H%M%S")
  CURRENT_DUMP_DIR=$DUMPS_DIR/$CURRENT_DUMP
  CURRENT_DUMP_ARCHIVE=$CURRENT_DUMP_DIR.tar.gz

  mkdir $CURRENT_DUMP_DIR
  log "Gathering dump $CURRENT_DUMP"

  copy_component_logs_to_dump

  # Copy all the trigger files to the dump (once they have finished being
  # written to).
  for file in $triggers
  do
    wait_until_closed $file
    log "$file is closed"
    mv $file $CURRENT_DUMP_DIR
  done

  # Finally we can compress the dump directory and delete it.
  #
  # We change to the dumps directory to do the tar as this removes the
  # directories above the current dump from the tar file.  Do all this in a
  # subshell so we can change directory freely.
  (cd $DUMPS_DIR; tar -pcz -f $CURRENT_DUMP_ARCHIVE $CURRENT_DUMP)
  log "Diagnostic archive $CURRENT_DUMP_ARCHIVE created"
  rm -rf $CURRENT_DUMP_DIR

  # We should have dealt with all the trigger files by now. Delete any that are
  # left over (to avoid tight looping).
  rm -f $triggers
done
