#!/bin/sh

# @file poll-sip
#
# Project Clearwater - IMS in the Cloud
# Copyright (C) 2013  Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

# Sends an OPTIONS poll over SIP to the local machine and checks the response.
# Usage: poll-sip <port>

# Grab the command-line argument.
[ $# = 1 ] || { echo "Usage: poll-sip <port>" >&2 ; exit 2 ; }
port=$1

# Grab our configuration - we just use the local IP address.
. /etc/clearwater/config

# Get a unique ID for this request, based on the uptime.
id=$(cut -d. -f1 /proc/uptime)

# For SIP, we need to wrap IPv6 addresses in square brackets.
sip_ip=$(/usr/share/clearwater/bin/bracket_ipv6_address.py $local_ip)

# Send the SIP message.  The nc line also includes checking the first line of the response says
# "SIP/2.0 200 OK".
nc -v -C -w 2 $local_ip $port <<EOF 2> /tmp/poll-sip.nc.stderr.$$ | tee /tmp/poll-sip.nc.stdout.$$ | head -1 | egrep -q "^SIP/2.0 200"
OPTIONS sip:poll-sip@$sip_ip:$port SIP/2.0
Via: SIP/2.0/TCP $sip_ip;rport;branch=z9hG4bK-$id
Max-Forwards: 2
To: <sip:poll-sip@$sip_ip:$port>
From: poll-sip <sip:poll-sip@$sip_ip>;tag=$id
Call-ID: poll-sip-$id
CSeq: $id OPTIONS
Contact: <sip:$sip_ip>
Accept: application/sdp
Content-Length: 0
User-Agent: poll-sip

EOF
rc=$?

# Check the return code and log if appropriate
if [ $rc != 0 ] ; then
  echo SIP poll failed to $sip_ip:$port >&2
  cat /tmp/poll-sip.nc.stderr.$$        >&2
  cat /tmp/poll-sip.nc.stdout.$$        >&2
fi
rm -f /tmp/poll-sip.nc.stderr.$$ /tmp/poll-sip.nc.stdout.$$

# Return the return code from the egrep command (0 if found, 1 if not).
exit $rc
