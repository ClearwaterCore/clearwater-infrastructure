#!/bin/bash

. /etc/clearwater/config
if [ ! -z $signaling_namespace ]; then
    if [ $EUID -ne 0 ]; then
        echo "When using multiple networks, schema creation must be run as root"
        exit 2
    fi
    namespace_prefix="ip netns exec $signaling_namespace"
fi

cfgcassreplicas()
{
    keyspace=$1

    if [[ -d /var/lib/cassandra/data/${keyspace} ]]; then
        yaml=/etc/cassandra/cassandra.yaml
        let max_replicas=2
        let min_replicas=2
        cassandra_nodes=($(cat ${yaml} | grep "[^#]*seeds:" |
                sed -e 's#^.*seeds:[    ]*"\([^"]*\).*$#\1#'|sed -e 's#,# #g'))
        let "num_replicas=${#cassandra_nodes[@]}"
        if [ $num_replicas -lt $min_replicas ]; then
            let "num_replicas=$min_replicas"
        fi
        if [ $num_replicas -gt $max_replicas ]; then
            let "num_replicas=$max_replicas"
        fi
        snitch=$(grep "^[[:space:]]*endpoint_snitch:" ${yaml}|
            sed -e 's#endpoint_snitch:[[:space:]]*\([^[:space:]]*\).*#\1#')

        if [ "$snitch" == "PropertyFileSnitch" ]; then
            IFS=$'\r\n' GLOBIGNORE='*' :; topology=(
                $(egrep "^[[:space:]]*([0-9]+[.][0-9]+[.][0-9]+[.][0-9]+|[0-9a-f\\:]+)[[:space:]]*=" /etc/cassandra/cassandra-topology.properties)
            )

            dcs=()
            declare -A dc_num_nodes
            for loc in "${topology[@]}"; do
                loc=( 
                    $(echo "$loc"|
                        sed -e 's#\\##g'|sed -e 's#^[[:space:]]*\([^[:space:]]*\)[^=]*=[[:space:]]*\([^:]*\):[[:space:]]*\([^[:space:]]*\).*$#\1 \2 \3#' ) 
                )
                
                dc=${loc[1]}
                rack=${loc[2]}
                (for e in ${dcs[@]}; do [[ "$e" == "${dc}" ]] && return 0; done; return 1)
                if [ $? -ne 0 ]; then
                    dcs=( ${dcs[@]} $dc )
                fi
                if [ -z ${dc_num_nodes[$dc]} ]; then
                    let "dc_num_nodes[$dc]=0"
                fi
                let "dc_num_nodes[$dc]=${dc_num_nodes[$dc]} + 1"
                    done

                # Generate cqlsh input for creating the keyspace
                (
                    printf "ALTER KEYSPACE \"${keyspace}\" WITH REPLICATION = { 'class' : 'NetworkTopologyStrategy', "
                    let "i=0"
                    while [ $i -lt ${#dcs[@]} ]; do
                        let "num_replicas=${dc_num_nodes[${dcs[$i]}]}"
                        if [ $num_replicas -gt $max_replicas ]; then
                            let "num_replicas=$max_replicas"
                        fi
                        if [ $i -ne 0 ]; then
                            printf ", "
                        fi
                        printf "'${dcs[$i]}' : $num_replicas"
                        let "i=$i + 1"
                    done
                    printf " };\n"
                ) > /tmp/$$.cqlsh.in


                #cat /tmp/$$.cqlsh.in
                $namespace_prefix cqlsh -3 < /tmp/$$.cqlsh.in
                rm -f /tmp/$$.cqlsh.in
        else
            printf "
ALTER KEYSPACE \"${keyspace}\" WITH REPLICATION =
  { 'class' : 'SimpleStrategy', 'replication_factor' : $num_replicas };\n" > /tmp/$$.cqlsh.in

            #cat /tmp/$$.cqlsh.in
            $namespace_prefix cqlsh -3 < /tmp/$$.cqlsh.in
            rm -f /tmp/$$.cqlsh.in
        fi
    fi

    return 0
}

cfgcassreplicas $1
