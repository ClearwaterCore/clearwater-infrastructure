#!/bin/bash
# Project Clearwater - IMS in the Cloud
# Copyright (C) 2016 Metaswitch Networks Ltd
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version, along with the "Special Exception" for use of
# the program along with SSL, set forth below. This program is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details. You should have received a copy of the GNU General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#
# The author can be reached by email at clearwater@metaswitch.com or by
# post at Metaswitch Networks Ltd, 100 Church St, Enfield EN2 6BQ, UK
#
# Special Exception
# Metaswitch Networks Ltd  grants you permission to copy, modify,
# propagate, and distribute a work formed by combining OpenSSL with The
# Software, or a work derivative of such a combination, even if such
# copying, modification, propagation, or distribution would otherwise
# violate the terms of the GPL. You must comply with the GPL in all
# respects for all of the code used other than OpenSSL.
# "OpenSSL" means OpenSSL toolkit software distributed by the OpenSSL
# Project and licensed under the OpenSSL Licenses, or a work based on such
# software and licensed under the OpenSSL Licenses.
# "OpenSSL Licenses" means the OpenSSL License and Original SSLeay License
# under which the OpenSSL Project distributes the OpenSSL toolkit software,
# as those licenses appear in the file LICENSE-OPENSSL.

# This utility script does an abort of a service, if it hasn't aborted for
# at least a day.  If the script has been used to abort the process more
# recently than 24 hours ago, the script just stops the service instead.
#
# The script is intended to be used in those cases where a service is
# misbehaving and a core file needs to be generated, but where we don't want
# all existing diagnostic sets to be flushed out if the condition keeps
# happening

usage="Usage: stop_or_abort [service] [reason] [abort period in seconds]"

service=$1
reason=$2
abortperiod=$3

if [[ $# != 3 ]]
then
    # Usage message to stderr
    echo $usage >&2
    exit 1
fi

# Check for the existence of the temporary marker file
marker=/tmp/stop_or_abort.$service.$reason.abort

last_abort=0
if [ -f $marker ]
then
  # Get the last modification time of the marker file
  last_abort=$(stat -c %Y $marker)
fi

# Get time now
time_now=$(date +%s)

# Is the difference in times greater than the time passed?
age=$(( $time_now - $last_abort ))

if [ $age -gt $abortperiod ]
then
  # Do an abort and touch the marker file
  /etc/init.d/$service abort; touch $marker
else
  # Do a stop
  /etc/init.d/$service stop
fi
